import threading

import time
import telebot
import random
from telebot import types

bot = telebot.TeleBot('7659043896:AAElYsiYcdI-_GJaNPV-jcri5nCK74UH4T4') #!!!!!—á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∏—Å–ø–æ—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—á–∏–π, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –≤ –±–æ—Ç —Ñ–∞–∑–µ—Ä


s = 0
p = 0
en = 50
global schTr, unTr, bal, det, pos
det = 0
bal = 550
schTr = False
unTr = False
bc = ["üîì"]
b = 0
c1 = 0
running = True
run = False
pos = 1
tc = ["üîí","üîí","üîí",]
bc = ["–¢–¶","–¢–†–¶"]


def un():
    global bal
    if schTr == False:
        print("–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ —à–∫–æ–ª—É!!!")
    else:
        print(f"–ù–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ç –≤–∞–º –Ω—É–∂–Ω—ã –¥–µ–Ω—å–≥–∏, –∞ –∏–º–µ–Ω–Ω–æ 1000 –º–æ–Ω–µ—Ç, —Å–ø–∏—Å–∞—Ç—å? –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–ø–∏—Å–∞–Ω–∏—è –±—É–¥–µ—Ç {bal - 1000}. –ù–∞–∂–º–∏—Ç–µ y —É—Å–ª–∏ —Å–æ–≥–ª–∞—Å–Ω—ã.")
        if input() == 'y':
            bal -= 1000
            if bal < 0:
                bal += 1000
                print("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç—á–Ω–æ –¥–µ–Ω–µ–≥, –Ω–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É '–ë—Ä–∏–∑' —Å–µ–π—á–∞—Å –∫–∞–∫ —Ä–∞–∑ –Ω—É–∂–Ω—ã –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—ã, –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ –ø–æ–¥—Ä–∞–±–æ—Ç–∫—É!")
                print("–¢–µ–ª–µ–ø–æ—Ä—Ç...")
                restaurant()

            else:
                print(f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –Ω–∞ –±–∞–ª–∞–Ω—Å–µ {bal}.")
                five_letters()
        else:
            print(f"–í—ã—Ö–æ–¥.")
def guess_the_number():
    secret_number = random.randint(1, 100)
    print("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.")
    while True:
        guess = int(input("–í–∞—à–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ: "))
        if guess < secret_number:
            print("–±–æ–ª—å—à–µ")
        elif guess > secret_number:
            print("–º–µ–Ω—å—à–µ")
        else:
            print(f"–í–µ—Ä–Ω–æ! –Ø –∑–∞–≥–∞–¥–∞–ª {secret_number}.")
            print('–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –∏–Ω—Å—Ç–∏—Ç—É—Ç, –∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å!')
            break

def production():
    global bal
    print('–≠—Ç–æ - –≤–∞—à –±–∏–∑–Ω–µ—Å, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –Ω–∞ –ø–ª–æ—â–∞–¥–∏!')
    print('–î–ª—è —Å–±–æ—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω–≤–µ–π–µ—Ä–∞, –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –≤—ã—Ö–æ–¥–∞ - s')
    global c1, run, unTr
    if unTr == True:
        run = True
        while run:
            if bc[0] == "üîí":
                time.sleep(1)
                c1 += 1
                print(f"–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –Ω–∞ –∫–æ–Ω–≤–µ–π–µ—Ä–µ 1: {c1}")
            else:
                print("–ö–æ–Ω–≤–µ–π–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
                time.sleep(1)
    else:
        print('–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –∏–Ω—Å—Ç–∏—Ç—É—Ç!')


def inputing():
    global run, det, c1
    run = True
    while run:
        try:
            command = input()
            if command == '1':
                det += c1
                c1 = 0
                print(f"–°–æ–±—Ä–∞–Ω–æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏: {det}")
            elif command == 's':
                run = False
            else:
                print("–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
        except KeyboardInterrupt:
            run = False


def restaurant():
    global running, bal, schTr
    tr = 0
    if schTr == False:
        print("–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ —à–∫–æ–ª—É!!!")
    else:
        print("–≠—Ç–æ - –º–∏–Ω–∏-–∏–≥—Ä–∞, –≥–¥–µ –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ 1–π —Ä—è–¥ –∏–∑ 10 (–∫–∞–∂–¥–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–¥–µ–ª—è–µ—Ç—Å—è), –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—Å–µ —á–∏—Å–ª–∞ —Ä–∞–∑–Ω—ã–µ!")
        while tr == 0:
            r1 = []
            r2 = []
            r3 = []
            r4 = []
            r5 = []
            r6 = []
            r7 = []
            r8 = []
            r9 = []
            r10 = []
            r = 0
            tr = 0
            for i in range(0, 5):
                r1.append(random.randint(0, 5))
            if tr == 0:
                for i in r1:
                    if r1.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = '2'
            for i in range(0, 5):
                r2.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r2:
                    if r2.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "2"
            for i in range(0, 5):
                r3.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r3:
                    if r3.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "3"
            for i in range(0, 5):
                r4.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r4:
                    if r4.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "4"
            for i in range(0, 5):
                r5.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r5:
                    if r5.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "5"
            for i in range(0, 5):
                r6.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r6:
                    if r6.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "6"
            for i in range(0, 5):
                r7.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r7:
                    if r7.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "7"
            for i in range(0, 5):
                r8.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r8:
                    if r8.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "8"
            for i in range(0, 5):
                r9.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r9:
                    if r9.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "9"
            for i in range(0, 5):
                r10.append(random.randint(0, 5))
            if tr == 0:
                r = 0
                for i in r10:
                    if r10.count(i) == 1:
                        r += 1
                    else:
                        r = 0
                if r == 5:
                    tr = "10"
            a1 = "1    "
            a1 += " ".join(map(str, r1))
            a2 = "2    "
            a2 += " ".join(map(str, r2))
            a3 = "3    "
            a3 += " ".join(map(str, r3))
            a4 = "4    "
            a4 += " ".join(map(str, r4))
            a5 = "5    "
            a5 += " ".join(map(str, r5))
            a6 = "6    "
            a6 += " ".join(map(str, r6))
            a7 = "7    "
            a7 += " ".join(map(str, r7))
            a8 = "8    "
            a8 += " ".join(map(str, r8))
            a9 = "9    "
            a9 += " ".join(map(str, r9))
            a10 = "10   "
            a10 += " ".join(map(str, r10))
        print(a1)
        print(a2)
        print(a3)
        print(a4)
        print(a5)
        print(a6)
        print(a7)
        print(a8)
        print(a9)
        print(a10)
        ryad = input()
        if ryad == tr:
            bal += 150
            print(bal)
            restaurant()
        elif ryad != 's' and ryad != tr:
            restaurant()

def saves():
    global schTr, unTr
    while True:
        with open("1235.txt", "r", encoding="utf-8") as file:
            saves = file.readlines()
        saves = saves[::2]
        for i in range(len(saves)):
            print(saves[i])
        q = int(input(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å (1 - {len(saves)}): ")) - 1
        e = 0
        for i in str(saves[q]):
            if i == "|":
                e += 1

        r = int(input(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å (1 - {e - 1}): "))
        i = []
        t = input()
        w = []
        if schTr == True:
            w.append(1)
        if unTr == True:
            w.append(2)
        w = "".join(w)
        sh = str(saves[q]).split("|")
        sh[r] = w
        print("\n".join(saves).replace(saves[q], f"{"|".join(sh)}"))
        saves = "\n".join(saves).replace(saves[q], f"{"|".join(sh)}")
        print()
        print("-----------------------------------------")
        print()
        with open("1235.txt", "w", encoding="utf-8") as file:
            file.write(saves)


def five_letters():
    print('–≠—Ç–æ –∏–≥—Ä–∞ "–ø—è—Ç—å –±—É–∫–≤", \n –≤ –Ω–µ–π –≤—ã –¥–æ–ª–∂–Ω—ã —É–≥–∞–¥–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ –∏–∑ 5 –±—É–∫–≤,\n –≤–≤–æ–¥—è —Å–≤–æ–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –µ—Å–ª–∏ –±—É–∫–≤–∞ –Ω–∞ –º–µ—Å—Ç–µ - 2 \n –µ—Å–ª–∏ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ - 1, –∞ –µ—Å–ª–∏ –Ω–µ—Ç - 0')
    global schTr, unTr
    words = ['apple', 'beach', 'carry', 'dance', 'dress', 'event', 'field', 'glass', 'happy', 'money', 'crack', 'laugh',
             'magic', 'ocean', 'penny']
    secret_word = random.choice(words)
    attempts = 0
    max_attempts = 6
    while attempts < max_attempts:
        guess = input(f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ ({max_attempts - attempts} –ø–æ–ø—ã—Ç–∫–∏ –æ—Å—Ç–∞–ª–∏—Å—å): ').lower()
        if len(guess) != 5:
            print('–û—à–∏–±–∫–∞: —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 5 –±—É–∫–≤.')
            continue
        result = ''
        for i in range(5):
            if guess[i] == secret_word[i]:
                result += '2'
            elif guess[i] in secret_word:
                result += '1'
            else:
                result += '0'
        print(result)
        if result == '22222':
            print('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!')
            break
        attempts += 1
    if attempts == max_attempts:
        print(f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ "{secret_word}".')
    if schTr == False:
        schTr = True
        print('–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ —à–∫–æ–ª—É, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é!')
        saves()
        return schTr
    else:
        unTr = True
        guess_the_number()
        saves()
        return unTr




def house():
    if tc[0] == "üîí":
        print("\033[37m–í—ã - –¥–æ–º–∞!")
        print('–°–¥–µ—Å—å –≤ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–º –Ω–µ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ...')
    if bc[0] == "üîí":
        print("\033[37m–í—ã - –¥–æ–º–∞!")
        print('–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–ø–∞—Ç—å, –≤–∞—à –±–∏–∑–Ω–µ—Å—Å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!')


nam = ""
@bot.message_handler(commands=['start'])
def Start_tutor(message):
    global nam
    markup = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton("map", callback_data="m")
    markup.row(b1)
    time.sleep(1)
    bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ –º–æ–µ–º —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–º –≥–æ—Ä–æ–¥–µ, –≤ –Ω–µ–º –∫–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ –Ω–∞—Ö–æ–¥–∏—Ç —Å–≤–æ–µ –∏—Å—Ç–∏–Ω–Ω–æ–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ!\n")
    time.sleep(1)
    bot.send_message(message.chat.id,"–î–ª—è –Ω–∞—á–∞–ª–∞ —è –ø–æ–∑–Ω–∞–∫–æ–º–ª—é –≤–∞—Å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã!")
    time.sleep(1)
    bot.send_message(message.chat.id,"–í—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å —Ç—É—Ä–∏—Å—Ç–æ–º –∏ –ø—Ä–æ—Å—Ç–æ –≥—É–ª—è—Ç—å –ø–æ –≥–æ—Ä–æ–¥—É, –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—è —Å –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º - –¥–ª—è —ç—Ç–æ–≥–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∏–≥—Ä—ã –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å t,")
    time.sleep(1)
    bot.send_message(message.chat.id,"–ê —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –±–∏–∑–Ω–µ—Å—Å, –Ω–∞–∂–∞–≤ –±—É–∫–≤—É b (–≤—Å–µ –±—É–∫–≤—ã —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ—á–Ω—ã–µ!)")
    time.sleep(1)
    bot.send_message(message.chat.id,"–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã - —Ç—É—Ä–∏—Å—Ç")
    time.sleep(1)
    bot.send_message(message.chat.id,"–î–ª—è –≤—ã–∑–æ–≤–∞ –∫–∞—Ä—Ç—ã - m")
    time.sleep(1)
    bot.send_message(message.chat.id,"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—Å - a")
    time.sleep(1)
    bot.send_message(message.chat.id,"–í –Ω–∞—á–∞–ª–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Ü–∏—Ñ—Ä–µ 1 - –≤ –≤–∞—à–µ–º –¥–æ–º–µ!")
    time.sleep(1)
    bot.send_message(message.chat.id,"–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã!", reply_markup=markup)
    time.sleep(1)
    nam = input("–ê—Ö, –¥–∞! –°–æ–≤—Å–µ–º –∑–∞–±—ã–ª? –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
    return nam

def about():
    global nam, pos, bal, schTr, unTr
    print(f"\033[1;30;47m–í–∞—Å –∑–æ–≤—É—Ç {nam}")
    if tc[0] != "üîí":
        print(f"–í—ã - –±–∏–∑–Ω–µ—Å–º–µ–Ω!")
    else:
        print("–í—ã - —Ç—É—Ä–∏—Å—Ç!")
    print(f"–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {pos}")
    print(f"–í–∞—à –±–∞–ª–∞–Ω—Å {bal}")
    if tc[0] != "üîí":
        if schTr == False:
            print(f"–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –Ω–∏ —à–∫–æ–ª—É, –Ω–∏ –∏–Ω—Å—Ç–∏—Ç—É—Ç –∏ –Ω–µ –æ—Ç–∫—Ä—ã–ª–∏ –±–∏–∑–Ω–µ—Å")
            if bal < 1000:
                print(f"–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –Ω–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ç")
        elif unTr == False:
            print(f"–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ —à–∫–æ–ª—É, –Ω–æ –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –∏–Ω—Å—Ç–∏—Ç—É—Ç –∏ –Ω–µ –æ—Ç–∫—Ä—ã–ª–∏ –±–∏–∑–Ω–µ—Å")
            if bal < 1000:
                print(f"–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –Ω–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ç")
        else:
            print(f"–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ —à–∫–æ–ª—É –∏ –∏–Ω—Å—Ç–∏—Ç—É—Ç")



def square():
    global bal, det, prodmoney
    prodmoney = 5
    if tc[0] == "üîí":
        print('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ø–æ–∫–∞ —á—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏, –∑–∞–∫—É–ø–µ–º —Ç–æ–≤–∞—Ä!')
    else:
        print('–ó–∞ –∫–∞–∂–¥—É—é –¥–µ—Ç–∞–ª—å –º—ã –≥–æ—Ç–æ–≤—ã –ø–ª–∞—Ç–∏—Ç—å 5 –º–æ–Ω–µ—Ç, –≤–æ–∑–º–æ–∂–Ω—ã —Ç–æ—Ä–≥–∏. –¢–æ—Ä–≥–æ–≤–∞—Ç—å—Å—è? y/n')
        if input() == 'y':
            yn = 0
            while yn == 0:
                prodmoney = int(input("–≠–π, –ø–∞—Ä–µ–Ω—å, –ø—Ä–µ–¥–ª–∞–≥–∞–π —Ü–µ–Ω—É, –∏ –±—ã—Å—Ç—Ä–æ! –û—á–µ—Ä–µ–¥—å! –ù—É, –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è? –ì–æ–≤–æ—Ä–∏: "))
                if prodmoney <= 25:
                    yn = random.randint(0, 1)
                    print(f'–Ø –ø–æ–¥—É–º–∞—é...')
                else:
                    print(f'–Ø –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω, —Ü–µ–Ω–∞ —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∞...')
            bal += det * prodmoney
            print(f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ {det * prodmoney} –º–æ–Ω–µ—Ç.')
        else:
            bal += det * prodmoney
            print(f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ {det * prodmoney} –º–æ–Ω–µ—Ç.')


def Map(tc, bc, p, bal,message):
    global pos
    print(1)
    lpos = pos
    markup = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton("b", callback_data="b")
    b2 = types.InlineKeyboardButton("t", url="t")
    b3 = types.InlineKeyboardButton("a", url='a')
    b4 = types.InlineKeyboardButton("m", callback_data="m")
    markup.add(b2, b1, b3, b4)
    bot.send_message(
        message.chat.id,
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π!\n"
        f"üè†1Ô∏è‚É£‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüè†‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è  \n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚òïÔ∏è3Ô∏è‚É£‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüìí4Ô∏è‚É£Ô∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è  \n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è  \n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüéì2Ô∏è‚É£‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüè†‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è  \n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüî≤üî≤üî≤üî≤üé™üî≤üî≤‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è  \n"
        f"‚¨úÔ∏èüè†‚¨úÔ∏è‚¨úÔ∏èüî≤üî≤üî≤üé†üî≤üî≤üî≤üî≤üè†‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüè†‚¨úÔ∏è\n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüî≤üî≤6Ô∏è‚É£üî≤üî≤üî≤üî≤üî≤‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨ú  \n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüî≤üî≤üî≤üî≤üî≤üî≤üî≤üî≤‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è  \n"
        f"‚¨úÔ∏è‚¨úÔ∏èüë∑5Ô∏è‚É£‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüî≤üî≤üî≤üé°üî≤‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è7Ô∏è‚É£‚¨úÔ∏è\n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüè†‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüè†‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüè†‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüè†‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è8Ô∏è‚É£‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏èüè†‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n"
        f"‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n"
        f"Y - –í–∞—à–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ\n"
        f"1 - –í–∞—à –¥–æ–º\n"
        f"2 - {tc[0]}\n"
        f"3 - –†–µ—Å—Ç–æ—Ä–∞–Ω '–ë—Ä–∏–∑'\n"
        f"4 - {tc[1]}\n"
        f"5 - {tc[2]}\n"
        f"6 - –ì–ª–∞–≤–Ω–∞—è –ø–ª–æ—â–∞–¥—å (—Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏)\n"
        f"7 - {bc[0]}\n"
        f"8 - {bc[1]}\n"
        f"–¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–∞—Ä—Ç—ã –Ω–∞–∂–º–∏—Ç–µ m",
        reply_markup=markup
    )
    print(f"_________________________________________________  Y - –í–∞—à–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ\n"
          f"|     1    |~~~~~~~~~~~|        |               |  1 - –í–∞—à –¥–æ–º\n"
          f"|__________|~~~~~~~~~~~|    3   |       4       |  2 - {tc[0]}\n"
          f"|~~~~~~~~ÃÉÃ≤ ÃÉÃ≤ÃÉÃ≤ ÃÉ    ~~|        |               |  3 - –†–µ—Å—Ç–æ—Ä–∞–Ω '–ë—Ä–∏–∑'\n"
          f"|~~~~~~~~|     2    |ÃÉÃ≤|________|________       |  4 - {tc[1]}\n"
          f"|~~~~~~~~|     _____|~~~~~~~~       ~~~~|       |  5 - {tc[2]}\n"
          f"|~~~~~~~~|_____|         ~~~~~~     ~~~~|       |  6 - –ì–ª–∞–≤–Ω–∞—è –ø–ª–æ—â–∞–¥—å (—Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏)\n"
          f"|~~~~~~~~~~~~~~|         ~~6~~~~~~~~~~~~|_______|  7 - {bc[0]}\n"
          f"|ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤|~~~~~~~~~~~~~~~      ~~~|       |  8 - {bc[1]}\n"
          f"|       5      |~~~~~~~~~~~~~~~      ~~~|   7   |\n"
          f"|______________|ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉ|       |  ~ - –£–ª–∏—Ü–∞ (–ø—É—Å—Ç–æ—Ç–∞)\n"
          f"|~~~~~~ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤~~~~~~ÃÉÃ≤ ÃÉÃ≤ ÃÉ |_______|\n"
          f"|~~~~~~|                  |~~~~~~|           |~~|\n"
          f"|~~~~~~|_______           |ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ |           |~~|\n"
          f"|~~~~~~~~~~~~~|               8              |~~|\n"
          f"|~~~~~~~~~~~~~|______________________________|~~|\n"
          f"|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|\n"
          f"|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|\n"
          f"|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|  –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–∞—Ä—Ç—ã –Ω–∞–∂–º–∏—Ç–µ m")
    pos = int(input("–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–π—Ç–∏ –∫—É–¥–∞ - —Ç–æ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–æ–º–µ—Ä–æ–º, –µ—Å–ª–∏ –Ω–µ—Ç - —Ç–æ –∂–µ —á–∏—Å–ª–æ: "))
    l1 = 'Y' if pos == 1 else ' '
    l2 = 'Y' if pos == 2 and tc[0] != "üîí" else ' '
    l3 = 'Y' if pos == 3 else ' '
    l4 = 'Y' if pos == 4 and tc[1] != "üîí" else ' '
    l5 = 'Y' if pos == 5 and tc[2] != "üîí" else ' '
    l6 = 'Y' if pos == 6 else '~'
    l7 = 'Y' if pos == 7 and bc[0] != "üîí" else ' '
    l8 = 'Y' if pos == 8 and bc[0] != "üîí" else ' '
    print(f"_________________________________________________  Y - –í–∞—à–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ")
    print(f"|     1 {l1}  |~~~~~~~~~~~|        |               |  1 - –í–∞—à –¥–æ–º")
    print(f"|__________|~~~~~~~~~~~|    3 {l3} |       4 {l4}     |  2 - {tc[0]}")
    print(f"|~~~~~~~~ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ~~|        |               |  3 - –†–µ—Å—Ç–æ—Ä–∞–Ω '–ë—Ä–∏–∑'")
    print(f"|~~~~~~~~|     2 {l2}  |ÃÉÃ≤ ÃÉÃ≤ |________|________       |  4 - {tc[1]}")
    print(f"|~~~~~~~~|     _____|~~~~~~~~       ~~~~|       |  5 - {tc[2]}")
    print(f"|~~~~~~~~|_____|         ~~~~~~     ~~~~|       |  6 - –ì–ª–∞–≤–Ω–∞—è –ø–ª–æ—â–∞–¥—å (—Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏)")
    print(f"|~~~~~~~~~~~~~~|         ~~6~{l6}~~~~~~~~~~|_______|  7 - {bc[0]}")
    print(f"|ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ |~~~~~~~~~~~~~~~      ~~~|       |  8 - {bc[1]}")
    print(f"|       5 {l5}    |~~~~~~~~~~~~~~~      ~~~|   7 {l7} |")
    print(f"|______________|ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ |       |  ~ - –£–ª–∏—Ü–∞ (–ø—É—Å—Ç–æ—Ç–∞)")
    print(f"|~~~~~~ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ~~~~~~ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤|_______|")
    print(f"|~~~~~~|                  |~~~~~~|           |~~|")
    print(f"|~~~~~~|_______           |ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ ÃÉÃ≤ |           |~~|")
    print(f"|~~~~~~~~~~~~~|               8 {l8}            |~~|")
    print(f"|~~~~~~~~~~~~~|______________________________|~~|")
    print(f"|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|")
    print(f"|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|  –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–∞—Ä—Ç—ã –Ω–∞–∂–º–∏—Ç–µ m")
    if pos > lpos:
        print("–ò–¥–µ–º...")
        time.sleep(pos - lpos)
    elif lpos > pos:
        print("–ò–¥–µ–º...")
        time.sleep(lpos - pos)
    if pos == 1:
        house()
    if pos == 2:
        if tc[0] != "üîí":
            un()
        else:
            print("–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–º–µ–Ω")
    if pos == 3:
        restaurant()
    if pos == 4:
        if tc[0] != "üîí":
            five_letters()
        else:
            print("–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–º–µ–Ω")
    if pos == 5:
        if tc[0] != "üîí":
                t1 = threading.Thread(target=production)
                t2 = threading.Thread(target=inputing)
                t1.start()
                t2.start()
                t2.join()
                t1.join()
        else:
            print("–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–º–µ–Ω")
    if pos == 6:
        square()
    if pos == 7:
        if bc[0] != "üîí":
            print("–¢–¶ –∏ –¢–†–¶ –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã")
        else:
            print("–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ç—É—Ä–∏—Å—Ç")
    if pos == 8:
        if bc[0] != "üîí":
            print("–¢–¶ –∏ –¢–†–¶ –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã")
        else:
            print("–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ç—É—Ä–∏—Å—Ç")

@bot.callback_query_handler(func=lambda callback: True)
def callb(callback):
    global callb,tc,bc,p,bal
    if callback.data == "b":
        Map(tc, bc, p, bal, callback.message)
    elif callback.data == "a":
        Map(tc, bc, p, bal, callback.message)
    elif callback.data == "m":
        Map(tc,bc,p,bal,callback.message)
    elif callback.data == "t":
        Map(tc,bc,p,bal,callback.message)
bot.infinity_polling()

while True:
    anws = input()
    if anws == "t":
        tc = ["üîí", "üîí", "üîí", ]
        bc = ["–¢–¶", "–¢–†–¶"]
        print("–° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—ã - —Ç—É—Ä–∏—Å—Ç")
    if anws == "b":
        bc = ["üîí", "üîí", "üîí", ]
        tc = ["–ò–Ω—Å—Ç–∏—Ç—É—Ç (–ø–ª–∞—Ç–Ω—ã–π)", "–®–∫–æ–ª–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)", "–í–∞—à –±–∏–∑–Ω–µ—Å—Å", ]
        print("–¢–µ–ø–µ—Ä—å –≤—ã - –±–∏–∑–Ω–µ—Å–º–µ–Ω!")
    if anws == "m":
        Map(tc, bc, s, bal)
    if anws == "a":
        about()


print("\033[37m –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ –º–æ–µ–º —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–º –≥–æ—Ä–æ–¥–µ, –≤ –Ω–µ–º –∫–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ –Ω–∞—Ö–æ–¥–∏—Ç —Å–≤–æ–µ –∏—Å—Ç–∏–Ω–Ω–æ–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ!")
